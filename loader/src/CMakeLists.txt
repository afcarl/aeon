message("project '${PROJECT_NAME}'")

set (SRC
    avi.cpp
    base64.cpp
    batch_iterator.cpp
    block.cpp
    block_loader_file.cpp
    block_loader_nds.cpp
    block_manager.cpp
    box.cpp
    bstream.cpp
    buffer_batch.cpp
    cap_mjpeg_decoder.cpp
    cpio.cpp
    crc.cpp
    etl_audio.cpp
    etl_boundingbox.cpp
    etl_char_map.cpp
    etl_depthmap.cpp
    etl_image.cpp
    etl_label_map.cpp
    etl_localization.cpp
    etl_multicrop.cpp
    etl_pixel_mask.cpp
    etl_video.cpp
    file_util.cpp
    image.cpp
    interface.cpp
    loader.cpp
    log.cpp
    manifest_file.cpp
    manifest_nds.cpp
    noise_clips.cpp
    provider_audio_classifier.cpp
    provider_audio_only.cpp
    provider_audio_transcriber.cpp
    provider_factory.cpp
    provider_image_boundingbox.cpp
    provider_image_classifier.cpp
    provider_image_localization.cpp
    provider_image_only.cpp
    provider_image_pixelmask.cpp
    provider_image_stereo.cpp
    provider_video_classifier.cpp
    provider_video_only.cpp
    specgram.cpp
    tiff.cpp
    util.cpp
    wav_data.cpp
    web_app.cpp
    web_server.cpp
)

set(SETUP_PY_IN "${CMAKE_CURRENT_SOURCE_DIR}/setup.py.in")
set(SETUP_PY    "${CMAKE_CURRENT_BINARY_DIR}/../setup.py")
configure_file(${SETUP_PY_IN} ${SETUP_PY})

if (PYTHON_FOUND)
set(SRC ${SRC} api.cpp)
endif(PYTHON_FOUND)

add_library(aeon SHARED ${SRC})
